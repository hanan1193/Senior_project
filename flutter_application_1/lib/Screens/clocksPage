

import 'package:flutter/material.dart';
import 'package:firebase_database/firebase_database.dart';
import 'package:audioplayers/audioplayers.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'swimmerMonitoringPage.dart';

class ClocksPage extends StatefulWidget {
  @override
  _ClocksPageState createState() => _ClocksPageState();
}

class _ClocksPageState extends State<ClocksPage> {
  final List<String> clockIds = [
    '123456', '234567', '345678', '456789', '567890', '678901'
  ];

  final DatabaseReference _database = FirebaseDatabase.instance.ref('Sensor');
  final AudioPlayer _player = AudioPlayer();
  bool _playedAlert = false;
  String status = 'SAFE';

  @override
  void initState() {
    super.initState();
    _activateStatusListener();
  }

  @override
  void dispose() {
    _player.dispose();
    super.dispose();
  }

  void _activateStatusListener() {
    _database.onValue.listen((event) {
      final data = event.snapshot.value as Map<dynamic, dynamic>?;
      if (data != null) {
        setState(() {
          status = data['status']?.toString() ?? 'SAFE';

          if (status != 'SAFE' && !_playedAlert) {
            _playedAlert = true;
            _player.play(AssetSource('siren.mp3'));
          } else if (status == 'SAFE') {
            _playedAlert = false;
            _player.stop();
          }
        });
      }
    });
  }

  Color _getCardColor(String status) {
    return status == 'DROWNING ALERT!' ? Colors.red[300]! : Colors.blue[300]!;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text(
          'Drowning Detection System',
          style: TextStyle(fontWeight: FontWeight.bold, color: Colors.white),
        ),
        centerTitle: true,
        backgroundColor: Colors.lightBlueAccent,
      ),
      body: Padding(
        padding: const EdgeInsets.all(35.0),
        child: GridView.builder(
          gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: 2,
            crossAxisSpacing: 16,
            mainAxisSpacing: 16,
            childAspectRatio: 3 / 2,
          ),
          itemCount: clockIds.length,
          itemBuilder: (context, index) {
            final baseCard = Card(
              color: index == 0 ? _getCardColor(status) : Colors.blue[100]!,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(16),
              ),
              elevation: 4,
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  const Icon(
                    Icons.access_time,
                    size: 48,
                    color: Colors.white,
                  ),
                  const SizedBox(height: 12),
                  Text(
                    'ID=${clockIds[index]}',
                    style: const TextStyle(
                      color: Colors.white,
                      fontWeight: FontWeight.bold,
                      fontSize: 16,
                    ),
                  )
                ],
              ),
            );

            final animatedCard = index == 0 && status != 'SAFE'
                ? baseCard.animate(effects: [ShakeEffect(duration: 600.ms)])
                : baseCard;

            return index == 0
                ? InkWell(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                          builder: (context) => swimmerMonitoringPage(),
                        ),
                      );
                    },
                    borderRadius: BorderRadius.circular(16),
                    child: animatedCard,
                  )
                : animatedCard;
          },
        ),
      ),
    );
  }
}

